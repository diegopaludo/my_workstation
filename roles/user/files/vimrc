let g:skip_defaults_vim = 0

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
syntax on

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

set smartcase
set showmatch
set showcmd

" Desabilita backups
set nobackup
set noswapfile
set nowritebackup

" Busca
set ignorecase
set hlsearch
set incsearch

" CodificaÃ§Ã£o
set encoding=utf-8
set fileencoding=utf-8

" Visual (cores, tema etc)
filetype on
filetype plugin off
syntax on
colorscheme elflord
set background=dark

set number
set ruler
set title

" Tabs e espaÃ§os
set expandtab
set nostartofline
set shiftwidth=4
set tabstop=4

" Cursor e colunas
" set cursorline
set cursorcolumn

" Pathogen
if filereadable(expand($HOME . "/.vim/autoload/pathogen.vim"))
    execute pathogen#infect()
endif

" Vim 7.2 nÃ£o suporta 'colorcolumn'
if exists('+colorcolumn')
  set colorcolumn=80
endif

highlight CursorColumn ctermbg=DarkGray
highlight ColorColumn ctermbg=DarkGray

" Sintaxe de arquivos
au BufNewFile,BufRead composer.lock set filetype=json
au BufNewFile,BufRead docker-compose*.yml set filetype=yaml
au BufNewFile,BufRead Jenkinsfile set filetype=groovy
au BufNewFile,BufRead Vagrantfile set filetype=ruby
au BufNewFile,BufRead *.textile set filetype=redminewiki
au BufNewFile,BufRead *.tfstate set filetype=json

" Needs by Airline
"set laststatus=2
"set t_Co=256
"set noshowmode
"let g:airline_powerline_fonts = 1
